# View(deaths_df)
# Funções:
FiltraDados <- function(dados, ano_inicio, ano_fim, pais, morte_causa){
dados_filtrados <- dados[(dados$year >= ano_inicio & dados$year <= ano_fim), c(1,3,3 + which(mortes == morte_causa))]
return(dados_filtrados)
}
MontaTabela <- function(dados, ano_inicio, ano_fim, pais, morte_causa){
dados_filtrados <- FiltraDados(dados, ano_inicio, ano_fim, pais, morte_causa)
numeros <- as.numeric(levels(dados_filtrados))[dados_filtrados]
tabela <- data.frame(Classe = morte_causa, media = mean(numeros),
mediana = median(numeros),
moda = getmode(c('Sem Moda', numeros)))
return(tabela)
}
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
anos <- sort(c(unique(df$year)))
pais <- c(unique(df$country))
mortes <- c(colnames(df))[c(-1,-2,-3)]
filtrado <- FiltraDados(df, anos[1], anos[30], pais[1], mortes[1])
tabela <- MontaTabela(df, anos[1], anos[30], pais[1], mortes[1])
# Bibliotecas:
library(shiny)
library(dplyr)
df <- read.csv("annual_deaths_by_causes.csv")
# View(deaths_df)
# Funções:
FiltraDados <- function(dados, ano_inicio, ano_fim, pais, morte_causa){
dados_filtrados <- dados[(dados$year >= ano_inicio & dados$year <= ano_fim), 3 + which(mortes == morte_causa)]
return(dados_filtrados)
}
MontaTabela <- function(dados, ano_inicio, ano_fim, pais, morte_causa){
dados_filtrados <- FiltraDados(dados, ano_inicio, ano_fim, pais, morte_causa)
tabela <- data.frame(Classe = morte_causa, media = mean(dados_filtrados),
moda = getmode(c('Sem Moda', dados_filtrados)),
mediana = median(dados_filtrados))
return(tabela)
}
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
anos <- sort(c(unique(df$year)))
pais <- c(unique(df$country))
mortes <- c(colnames(df))[c(-1,-2,-3)]
filtrado <- FiltraDados(df, anos[29], anos[30], pais[1], mortes[1])
tabela <- MontaTabela(df, anos[29], anos[30], pais[1], mortes[1])
View(tabela)
# Bibliotecas:
library(shiny)
library(dplyr)
df <- read.csv("annual_deaths_by_causes.csv")
# View(deaths_df)
# Funções:
FiltraDados <- function(dados, ano_inicio, ano_fim, pais, morte_causa){
dados_filtrados <- dados[(dados$year >= ano_inicio & dados$year <= ano_fim), 3 + which(mortes == morte_causa)]
return(dados_filtrados)
}
MontaTabela <- function(dados, ano_inicio, ano_fim, pais, morte_causa){
dados_filtrados <- FiltraDados(dados, ano_inicio, ano_fim, pais, morte_causa)
tabela <- data.frame(Classe = morte_causa, media = mean(dados_filtrados),
moda = getmode(c('Sem Moda', dados_filtrados)),
mediana = median(dados_filtrados))
return(tabela)
}
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
anos <- sort(c(unique(df$year)))
pais <- c(unique(df$country))
mortes <- c(colnames(df))[c(-1,-2,-3)]
filtrado <- FiltraDados(df, anos[19], anos[30], pais[1], mortes[1])
tabela <- MontaTabela(df, anos[19], anos[30], pais[1], mortes[1])
View(tabela)
View(df)
View(getmode)
mean(filtrado)
mean(filtrado[1:1000])
mean(filtrado[1:100])
mean(filtrado[1:500])
mean(as.numeric(as.character(filtrado)))
# UI:
ui <- fluidPage(
# Application title
titlePanel("Old Faithful Geyser Data"),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
),
# Show a plot of the generated distribution
mainPanel(
tableOutput("TabelaDados")
)
)
)
# Server:
server <- function(input, output) {
tabela <- MontaTabela(df, anos[1], anos[17], pais[1], mortes, mortes[1])
output$TabelaDados <- renderTable(tabela)
}
mean(as.numeric(as.character(filtrado)))
filtrado
# Bibliotecas:
library(shiny)
library(dplyr)
df <- read.csv("annual_deaths_by_causes.csv")
# View(deaths_df)
# Funções:
FiltraDados <- function(dados, ano_inicio, ano_fim, pais, morte_causa){
dados_filtrados <- dados[(dados$year >= ano_inicio & dados$year <= ano_fim), 3 + which(mortes == morte_causa)]
return(dados_filtrados)
}
MontaTabela <- function(dados, ano_inicio, ano_fim, pais, morte_causa){
dados_filtrados <- FiltraDados(dados, ano_inicio, ano_fim, pais, morte_causa)
tabela <- data.frame(Classe = morte_causa, media = mean(dados_filtrados, True),
moda = getmode(c('Sem Moda', dados_filtrados), True),
mediana = median(dados_filtrados), True)
return(tabela)
}
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
anos <- sort(c(unique(df$year)))
pais <- c(unique(df$country))
mortes <- c(colnames(df))[c(-1,-2,-3)]
filtrado <- FiltraDados(df, anos[19], anos[30], pais[1], mortes[1])
tabela <- MontaTabela(df, anos[19], anos[30], pais[1], mortes[1])
# Bibliotecas:
library(shiny)
library(dplyr)
df <- read.csv("annual_deaths_by_causes.csv")
# View(deaths_df)
# Funções:
FiltraDados <- function(dados, ano_inicio, ano_fim, pais, morte_causa){
dados_filtrados <- dados[(dados$year >= ano_inicio & dados$year <= ano_fim), 3 + which(mortes == morte_causa)]
return(dados_filtrados)
}
MontaTabela <- function(dados, ano_inicio, ano_fim, pais, morte_causa){
dados_filtrados <- FiltraDados(dados, ano_inicio, ano_fim, pais, morte_causa)
tabela <- data.frame(Classe = morte_causa, media = mean.default(dados_filtrados, na.rm = True),
moda = getmode(c('Sem Moda', dados_filtrados), True),
mediana = median(dados_filtrados), True)
return(tabela)
}
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
anos <- sort(c(unique(df$year)))
pais <- c(unique(df$country))
mortes <- c(colnames(df))[c(-1,-2,-3)]
filtrado <- FiltraDados(df, anos[19], anos[30], pais[1], mortes[1])
tabela <- MontaTabela(df, anos[19], anos[30], pais[1], mortes[1])
# Bibliotecas:
library(shiny)
library(dplyr)
df <- read.csv("annual_deaths_by_causes.csv")
# View(deaths_df)
# Funções:
FiltraDados <- function(dados, ano_inicio, ano_fim, pais, morte_causa){
dados_filtrados <- dados[(dados$year >= ano_inicio & dados$year <= ano_fim), 3 + which(mortes == morte_causa)]
return(dados_filtrados)
}
MontaTabela <- function(dados, ano_inicio, ano_fim, pais, morte_causa){
dados_filtrados <- FiltraDados(dados, ano_inicio, ano_fim, pais, morte_causa)
tabela <- data.frame(Classe = morte_causa, media = mean.default(dados_filtrados, na.rm = TRUE),
moda = getmode(c('Sem Moda', dados_filtrados), True),
mediana = median(dados_filtrados), True)
return(tabela)
}
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
anos <- sort(c(unique(df$year)))
pais <- c(unique(df$country))
mortes <- c(colnames(df))[c(-1,-2,-3)]
filtrado <- FiltraDados(df, anos[19], anos[30], pais[1], mortes[1])
tabela <- MontaTabela(df, anos[19], anos[30], pais[1], mortes[1])
# Bibliotecas:
library(shiny)
library(dplyr)
df <- read.csv("annual_deaths_by_causes.csv")
# View(deaths_df)
# Funções:
FiltraDados <- function(dados, ano_inicio, ano_fim, pais, morte_causa){
dados_filtrados <- dados[(dados$year >= ano_inicio & dados$year <= ano_fim), 3 + which(mortes == morte_causa)]
return(dados_filtrados)
}
MontaTabela <- function(dados, ano_inicio, ano_fim, pais, morte_causa){
dados_filtrados <- FiltraDados(dados, ano_inicio, ano_fim, pais, morte_causa)
tabela <- data.frame(Classe = morte_causa, media = mean(dados_filtrados, TRUE),
moda = getmode(c('Sem Moda', dados_filtrados), TRUE),
mediana = median(dados_filtrados), TRUE)
return(tabela)
}
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
anos <- sort(c(unique(df$year)))
pais <- c(unique(df$country))
mortes <- c(colnames(df))[c(-1,-2,-3)]
filtrado <- FiltraDados(df, anos[19], anos[30], pais[1], mortes[1])
tabela <- MontaTabela(df, anos[19], anos[30], pais[1], mortes[1])
# Bibliotecas:
library(shiny)
library(dplyr)
df <- read.csv("annual_deaths_by_causes.csv")
# View(deaths_df)
# Funções:
FiltraDados <- function(dados, ano_inicio, ano_fim, pais, morte_causa){
dados_filtrados <- dados[(dados$year >= ano_inicio & dados$year <= ano_fim), 3 + which(mortes == morte_causa)]
return(dados_filtrados)
}
MontaTabela <- function(dados, ano_inicio, ano_fim, pais, morte_causa){
dados_filtrados <- FiltraDados(dados, ano_inicio, ano_fim, pais, morte_causa)
tabela <- data.frame(Classe = morte_causa, media = mean(dados_filtrados, na.rm = TRUE),
moda = getmode(c('Sem Moda', dados_filtrados), TRUE),
mediana = median(dados_filtrados), TRUE)
return(tabela)
}
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
anos <- sort(c(unique(df$year)))
pais <- c(unique(df$country))
mortes <- c(colnames(df))[c(-1,-2,-3)]
filtrado <- FiltraDados(df, anos[19], anos[30], pais[1], mortes[1])
tabela <- MontaTabela(df, anos[19], anos[30], pais[1], mortes[1])
# Bibliotecas:
library(shiny)
library(dplyr)
df <- read.csv("annual_deaths_by_causes.csv")
# View(deaths_df)
# Funções:
FiltraDados <- function(dados, ano_inicio, ano_fim, pais, morte_causa){
dados_filtrados <- dados[(dados$year >= ano_inicio & dados$year <= ano_fim), 3 + which(mortes == morte_causa)]
return(dados_filtrados)
}
MontaTabela <- function(dados, ano_inicio, ano_fim, pais, morte_causa){
dados_filtrados <- FiltraDados(dados, ano_inicio, ano_fim, pais, morte_causa)
tabela <- data.frame(Classe = morte_causa, media = mean(dados_filtrados, na.rm = TRUE),
moda = getmode(c('Sem Moda', dados_filtrados)),
mediana = median(dados_filtrados), TRUE)
return(tabela)
}
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
anos <- sort(c(unique(df$year)))
pais <- c(unique(df$country))
mortes <- c(colnames(df))[c(-1,-2,-3)]
filtrado <- FiltraDados(df, anos[19], anos[30], pais[1], mortes[1])
tabela <- MontaTabela(df, anos[19], anos[30], pais[1], mortes[1])
View(tabela)
# Bibliotecas:
library(shiny)
library(dplyr)
df <- read.csv("annual_deaths_by_causes.csv")
# View(deaths_df)
# Funções:
FiltraDados <- function(dados, ano_inicio, ano_fim, pais, morte_causa){
dados_filtrados <- dados[(dados$year >= ano_inicio & dados$year <= ano_fim), 3 + which(mortes == morte_causa)]
return(dados_filtrados)
}
MontaTabela <- function(dados, ano_inicio, ano_fim, pais, morte_causa){
dados_filtrados <- FiltraDados(dados, ano_inicio, ano_fim, pais, morte_causa)
tabela <- data.frame(Classe = morte_causa, media = mean(dados_filtrados, na.rm = TRUE),
moda = getmode(c('Sem Moda', dados_filtrados)),
mediana = median(dados_filtrados, na.rm = TRUE))
return(tabela)
}
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
anos <- sort(c(unique(df$year)))
pais <- c(unique(df$country))
mortes <- c(colnames(df))[c(-1,-2,-3)]
filtrado <- FiltraDados(df, anos[19], anos[30], pais[1], mortes[1])
tabela <- MontaTabela(df, anos[19], anos[30], pais[1], mortes[1])
# Bibliotecas:
library(shiny)
library(dplyr)
df <- read.csv("annual_deaths_by_causes.csv")
# View(deaths_df)
# Funções:
FiltraDados <- function(dados, ano_inicio, ano_fim, pais, morte_causa){
dados_filtrados <- dados[(dados$year >= ano_inicio & dados$year <= ano_fim), 3 + which(mortes == morte_causa)]
return(dados_filtrados)
}
MontaTabela <- function(dados, ano_inicio, ano_fim, pais, morte_causa){
dados_filtrados <- FiltraDados(dados, ano_inicio, ano_fim, pais, morte_causa)
dados_filtrados <- filter(!is.na(dados_filtrados))
tabela <- data.frame(Classe = morte_causa, media = mean(dados_filtrados, na.rm = TRUE),
moda = getmode(c('Sem Moda', dados_filtrados)),
mediana = median(dados_filtrados, na.rm = TRUE))
return(tabela)
}
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
anos <- sort(c(unique(df$year)))
pais <- c(unique(df$country))
mortes <- c(colnames(df))[c(-1,-2,-3)]
filtrado <- FiltraDados(df, anos[19], anos[30], pais[1], mortes[1])
tabela <- MontaTabela(df, anos[19], anos[30], pais[1], mortes[1])
# Bibliotecas:
library(shiny)
library(dplyr)
df <- read.csv("annual_deaths_by_causes.csv")
# View(deaths_df)
# Funções:
FiltraDados <- function(dados, ano_inicio, ano_fim, pais, morte_causa){
dados_filtrados <- dados[(dados$year >= ano_inicio & dados$year <= ano_fim), 3 + which(mortes == morte_causa)]
return(dados_filtrados)
}
MontaTabela <- function(dados, ano_inicio, ano_fim, pais, morte_causa){
dados_filtrados <- FiltraDados(dados, ano_inicio, ano_fim, pais, morte_causa)
dados_filtrados <- dados_filtrados[!is.na(dados_filtrados)]
tabela <- data.frame(Classe = morte_causa, media = mean(dados_filtrados, na.rm = TRUE),
moda = getmode(c('Sem Moda', dados_filtrados)),
mediana = median(dados_filtrados, na.rm = TRUE))
return(tabela)
}
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
anos <- sort(c(unique(df$year)))
pais <- c(unique(df$country))
mortes <- c(colnames(df))[c(-1,-2,-3)]
filtrado <- FiltraDados(df, anos[19], anos[30], pais[1], mortes[1])
tabela <- MontaTabela(df, anos[19], anos[30], pais[1], mortes[1])
View(tabela)
# Bibliotecas:
library(shiny)
library(dplyr)
df <- read.csv("annual_deaths_by_causes.csv")
# View(deaths_df)
# Funções:
FiltraDados <- function(dados, ano_inicio, ano_fim, pais, morte_causa){
dados_filtrados <- dados[(dados$year >= ano_inicio & dados$year <= ano_fim), 3 + which(mortes == morte_causa)]
return(dados_filtrados)
}
MontaTabela <- function(dados, ano_inicio, ano_fim, pais, morte_causa){
dados_filtrados <- FiltraDados(dados, ano_inicio, ano_fim, pais, morte_causa)
dados_filtrados <- dados_filtrados[!is.na(dados_filtrados)]
tabela <- data.frame(Classe = morte_causa, media = mean(dados_filtrados),
moda = getmode(c('Sem Moda', dados_filtrados)),
mediana = median(dados_filtrados))
return(tabela)
}
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
anos <- sort(c(unique(df$year)))
pais <- c(unique(df$country))
mortes <- c(colnames(df))[c(-1,-2,-3)]
filtrado <- FiltraDados(df, anos[1], anos[30], pais[1], mortes[1])
tabela <- MontaTabela(df, anos[1], anos[30], pais[1], mortes[1])
runApp('Projeto_estatistica_app.R')
library(shiny); runApp('Projeto_estatistica_app.R')
runApp('Projeto_estatistica_app.R')
library(shiny); runApp('Projeto_estatistica_app.R')
runApp('Projeto_estatistica_app.R')
runApp('Projeto_estatistica_app.R')
runApp('Projeto_estatistica_app.R')
library(shiny); runApp('Projeto_estatistica_app.R')
# Bibliotecas:
library(shiny)
library(dplyr)
df <- read.csv("annual_deaths_by_causes.csv")
# View(deaths_df)
# Funções:
FiltraDados <- function(dados, ano_inicio, ano_fim, pais, morte_causa){
dados_filtrados <- dados[(dados$year >= ano_inicio & dados$year <= ano_fim), 3 + which(mortes == morte_causa)]
return(dados_filtrados)
}
MontaTabela <- function(dados, ano_inicio, ano_fim, pais, morte_causa){
dados_filtrados <- FiltraDados(dados, ano_inicio, ano_fim, pais, morte_causa)
dados_filtrados <- dados_filtrados[!is.na(dados_filtrados)]
tabela <- data.frame(Classe = morte_causa,
Media = mean(dados_filtrados),
Moda = getmode(c('Sem Moda', dados_filtrados)),
Mediana = median(dados_filtrados),
Desvio_Padrao = sd(dados_filtrados),
Maximo = max(dados_filtrados),
Minimo = min(dados_filtrados))
return(tabela)
}
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
anos <- sort(c(unique(df$year)))
pais <- c(unique(df$country))
mortes <- c(colnames(df))[c(-1,-2,-3)]
# UI:
ui <- fluidPage(
# Application title
titlePanel("Numero de mortes"),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
),
# Show a plot of the generated distribution
mainPanel(
tableOutput("TabelaDados")
)
)
)
# Server:
server <- function(input, output) {
tabela <- MontaTabela(df, anos[1], anos[30], pais[1], mortes[1])
output$TabelaDados <- renderTable(tabela)
}
# Executa o app:
shinyApp(ui = ui, server = server)
View(df)
tabela <- MontaTabela(df, anos[1], anos[31], pais[1], mortes[1])
View(tabela)
tabela <- MontaTabela(df, anos[1], anos[30], pais[1], mortes[1])
tabela <- MontaTabela(df, anos[1], anos[30], pais[1], mortes[1])
View(tabela)
pais <- sort(unique(df$country))
df <- read.csv("annual_deaths_by_causes.csv")
anos <- sort(c(unique(df$year)))
pais <- sort(unique(df$country))
mortes <- c(colnames(df))[c(-1,-2,-3)]
runApp('Projeto_estatistica_app.R')
runApp('Projeto_estatistica_app.R')
runApp('Projeto_estatistica_app.R')
runApp('Projeto_estatistica_app.R')
# UI:
ui <- fluidPage(
# Application title
titlePanel("Numero de mortes"),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
selectInput(inputId = 'idPais', label = 'País:',
choises = pais)
),
# Show a plot of the generated distribution
mainPanel(
tableOutput("TabelaDados")
)
)
)
sidebarPanel(
selectInput(inputId = 'idPais', label = 'País:',
choises = pais)
runApp('Projeto_estatistica_app.R')
runApp('Projeto_estatistica_app.R')
runApp('Projeto_estatistica_app.R')
library(shiny); runApp('Projeto_estatistica_app.R')
library(shiny); runApp('Projeto_estatistica_app.R')
runApp('Projeto_estatistica_app.R')
runApp('Projeto_estatistica_app.R')
runApp('Projeto_estatistica_app.R')
mortes <- sort(colnames(df))[c(-1,-2,-3)]
df <- read.csv("annual_deaths_by_causes.csv")
mortes <- sort(colnames(df))[c(-1,-2,-3)]
view(mortes)
View(mortes)
mortes
mortes <- sort(colnames(df[c(-1,-2,-3)]))
mortes
runApp('Projeto_estatistica_app.R')
View(df)
runApp('Projeto_estatistica_app.R')
# Bibliotecas:
library(shiny)
library(dplyr)
df <- read.csv("annual_deaths_by_causes.csv")
df <- df[!is.na(dados_filtrados)]
library(shiny); runApp('Projeto_estatistica_app.R')
runApp('Projeto_estatistica_app.R')
MontaTabela(df, anos[1], anos[30], input$idPais, input$idMortes)
runApp('Projeto_estatistica_app.R')
runApp('Projeto_estatistica_app.R')
runApp('Projeto_estatistica_app.R')
runApp('Projeto_estatistica_app.R')
runApp('Projeto_estatistica_app.R')
runApp('Projeto_estatistica_app.R')
runApp('Projeto_estatistica_app.R')
runApp('Projeto_estatistica_app.R')
runApp('Projeto_estatistica_app.R')
# Dados:
df <- read.csv("annual_deaths_by_causes.csv")
View(df)
runApp('Projeto_estatistica_app.R')
runApp('Projeto_estatistica_app.R')
runApp('Projeto_estatistica_app.R')
# Dados:
df <- read.csv("annual_deaths_by_causes.csv")
mortes_alfabetica <- sort(mortes)
mortes <- colnames(df[c(-1,-2,-3)])
mortes_alfabetica <- sort(mortes)
mortes_alfabetica
runApp('Projeto_estatistica_app.R')
runApp('Projeto_estatistica_app.R')
